// Apply the java plugin to add support for Java
plugins {
    id 'java'
    id 'idea'
    id 'eclipse'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '1.2.3'
    id 'org.hidetake.swagger.generator' version '2.4.2'
}

mainClassName = 'nl.esciencecenter.cwl.xenon.XenonRunner'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenLocal()
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile group: 'nl.esciencecenter.xenon', name: 'xenon', version: '2.0.0'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.0.pr4'
	compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: '2.9.0.pr4'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.6'
    compileOnly "org.projectlombok:lombok:1.16.16"
    

    swaggerCodegen 'io.swagger:swagger-codegen-cli:2.2.2'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}


validateSwagger {
    inputFile = file('xenon-workflow-execution-api.yaml')
}


generateSwaggerCode {
    language = 'msf4j'
    inputFile = file('xenon-workflow-execution-api.yaml')
//    outputDir = file('src')
//    configFile = file('config.json')
//    components = ['models', 'apis']
}
